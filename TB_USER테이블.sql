CREATE TABLE TB_USER(
	USER_NO     NUMBER CONSTRAINT TB_USER_PK PRIMARY KEY,
	USER_ID     VARCHAR2(30) NOT NULL,
	USER_PW     VARCHAR2(30) NOT NULL,
	USER_NAME   VARCHAR2(30) NOT NULL,
	ENROLL_DATE DATE DEFAULT CURRENT_DATE
);

COMMENT ON COLUMN TB_USER.USER_NO     IS '사용자 번호';
COMMENT ON COLUMN TB_USER.USER_ID     IS '사용자 아이디';
COMMENT ON COLUMN TB_USER.USER_PW     IS '사용자 비밀번호';
COMMENT ON COLUMN TB_USER.USER_NAME   IS '사용자 이름';
COMMENT ON COLUMN TB_USER.ENROLL_DATE IS '사용자 가입일';


/* 
 * 인덱스명 : IDX_EMP_NAME
 * 테이블명 : EMPLOYEE
 * 컬럼명 : EMP_NAME
 * 목적 : EMP_NAME 이용한 컬럼 검색 속도 향상
 * 
 *  */

-- EMPLOYEE 테이블의 EMAIL 컬럼에 UNIQUE INDEX 생성
CREATE UNIQUE INDEX IDX_UNIQUE_EMAIL
ON EMPLOYEE (EMAIL);

-- UNIQUE INDEX는 중복 방지
-- ENAIL 컬럼에 중복되지 않는 고유한 값만 허용
--> 중복된 EMAIL 삽입 시 오류 발생!



-- USER_NO 컬럼에 삽입될 시퀀스 생성
CREATE SEQUENCE SEQ_USER_NO NOCACHE;

-- 샘플 데이터 INSERT
INSERT INTO TB_USER 
VALUES(SEQ_USER_NO.NEXTVAL, 'user01', 'pass01', '유저일', DEFAULT );
INSERT INTO TB_USER 
VALUES(SEQ_USER_NO.NEXTVAL, 'user02', 'pass02', '유저이', DEFAULT );

SELECT * FROM TB_USER
ORDER BY 1;



COMMIT;